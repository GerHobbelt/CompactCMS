# name-based virtual host:
# <VirtualHost *:80>
# IP-based virtual host:
<VirtualHost 127.0.0.2:80>
	ServerAdmin webmaster@example.com
	ServerName example.com

	# cf. http://www.mediawiki.org/wiki/Manual:Short_URL/wiki/Page_title_--_Apache_rewrite--root_access
	AcceptPathInfo On
	RewriteEngine       On
	Options             FollowSymLinks
	RewriteLog          /var/log/apache2/example.com.mod_rewrite.log
	# dial up level to 7 for VERY verbose rewrite logging
	RewriteLogLevel     2

	# on my UNIX boxes, all sites sit under /web instead of /var/www/whatever
	# as /var is for logging and a separate partition, just like /web is:
	# if someone (or some script) floods on the buggers, we're still 
	# _kinda_ okay with respect to the other other bits 'n pieces.
	#
	DocumentRoot /web/example.com

	ErrorLog /var/log/apache2/example.com.error.log

	# Possible values include: debug, info, notice, warn, error, crit,
	# alert, emerg.
	LogLevel info

	CustomLog /var/log/apache2/example.com.access.log combined


	<Directory "/web/example.com/" >
	
		Options Indexes FollowSymLinks MultiViews
		# no .htaccess gimmickery allowed == site speedup
		AllowOverride None
		Order allow,deny
		allow from all
		# AcceptPathInfo On
		
		#----- derived from CCMS .htaccess, then AUGMENTED ----------
		#
		# in particular, note the special sitemap.xml rewrite rule as CCMS sits in a subdir
		# but google & company don't bother to check there; they only look for /sitemap.xml
		#
		
		RewriteEngine       On

		RewriteBase /

		#
		# note that this will be WRONG for 1.4.2(git) CCMS:
		#
		#RewriteRule ^sitemap\.xml$            /c/lib/sitemap.php [L]
		#
		# instead, it should become this then:
		#
		RewriteRule ^sitemap\.xml$            /c/index.php?page=sitemap [L]


		# Only apply to URLs on this domain
		#RewriteCond %{HTTP_HOST} ^192\.168\.1\.100$ (this seems unnecessary)

		# Only apply to URLs that aren't already under CCMS folder.
		RewriteCond %{REQUEST_URI} !^/c/
		RewriteCond %{REQUEST_URI} !^/c

		# Don't apply to URLs that go to existing files or folders.
		RewriteCond %{REQUEST_FILENAME} !-f
		RewriteCond %{REQUEST_FILENAME} !-d

		# Rewrite all those to insert /folder.
		RewriteRule ^([^/].*)$ /c/$1 [R,L]

		#end RewriteCond
		
		
		# Also redirect the root folder request.
		#RewriteCond %{HTTP_HOST} ^192\.168\.1\.100$
		RewriteRule ^(/)?$ /c/ [R,L]

	</Directory>




	<Directory "/web/example.com/c/" >
##
#
# Copyright 2008 - 2010 by CompactCMS.nl. All rights reserved.
# This file is part of CompactCMS (refer to license.txt)
# Revision: CompactCMS - 1.4.2
#
##

#
# WARNING:
# 
# Be sure to read 
#    http://httpd.apache.org/docs/2.2/howto/htaccess.html#when
# and note that you should move the content of this .htaccess file to a
# <Directory> directory within your <VirtualHost> or 'main' apache config
# files, whenever possible, following the advice at the above-mentioned URL.
#

AddDefaultCharset utf-8
Options +FollowSymLinks
# AcceptPathInfo     On
RewriteEngine        On
# RewriteLog         /var/log/apache2/example.com.mod_rewrite.log
# RewriteLogLevel    7

## 
# Start modification
# Make sure the RewriteBase variable reflects your file structure
##


ErrorDocument 403 /c/index.php?page=403
ErrorDocument 404 /c/index.php?page=404


# For an installation under root use / (default)
# For an installation under /ccms use /ccms/
RewriteBase /c/

##
# End modification
##

##
# It's a good idea to make www. and non www. redirect to either one
# Adjust the two lines below and UNCOMMENT both lines (remove #'s)
##
#
# [i_a] note: forget this bit; I've got multiple VirtualHost sections
#             which effectively accomplish the same. Rigorously.
#
# RewriteCond %{HTTP_HOST} ^www.example.com [NC] 
# RewriteRule ^(.*)$ http://example.com/$1 [L,R=301]

##
# Various rewrite rules
##


RewriteCond    %{REQUEST_FILENAME}  -f
RewriteRule    ^(.*\.html)$          $1  [L]
RewriteCond    %{REQUEST_FILENAME}  -f
RewriteRule    ^(.*\.csx)$           $1  [L]


RewriteRule ^([^/]*)/([^/]*)\.html$             index.php?page=$1&id=$2 [QSA,L]
RewriteRule ^([^/]*)/([^/]*)\.print$            index.php?page=$1&id=$2&printing=Y [QSA,L]
RewriteRule ^([^/]+)\.html$                     index.php?page=$1 [QSA,L]
RewriteRule ^([^/]+)\.print$                    index.php?page=$1&printing=Y [QSA,L]
RewriteRule ^lib/includes/js/([^/]+\.js)$       lib/includes/combine.inc.php?type=javascript&files=$1 [QSA,L]
RewriteRule ^admin/img/styles/([^/]+\.css)$     lib/includes/combine.inc.php?type=css&files=$1 [QSA,L]
# pull EVERY OTHER JS/CSS file through combine as well: that's our generic cacher/compressor/optimizer
RewriteRule ^(lib/[^,]+)/([^/,]+\.js(,.+)?)$    lib/includes/combine.inc.php?type=javascript&files=$2&jsdir=$1 [QSA,L]
RewriteRule ^(lib/[^,]+)/([^/,]+\.css(,.+)?)$   lib/includes/combine.inc.php?type=css&files=$2&cssdir=$1 [QSA,L]
RewriteRule ^(admin/[^,]+)/([^/,]+\.js(,.+)?)$  lib/includes/combine.inc.php?type=javascript&files=$2&jsdir=$1 [QSA,L]
RewriteRule ^(admin/[^,]+)/([^/,]+\.css(,.+)?)$ lib/includes/combine.inc.php?type=css&files=$2&cssdir=$1 [QSA,L]
RewriteRule ^sitemap\.xml$                      index.php?page=sitemap [QSA,L]

##
# Security measures
##
RewriteCond %{QUERY_STRING} (.*)(http|https|ftp):\/\/(.*)
RewriteRule ^(.+)$ - [F]

<IfModule mod_security.c>
	SecFilterEngine On
	SecFilterDefaultAction "deny,log,status:403"
	SecFilterScanPOST On
	SecFilterCheckURLEncoding On
	SecFilterCheckUnicodeEncoding Off
</IfModule>

##
# The lines below improve loading times for the administration, following the best practice
# rules from: http://developer.yahoo.com/performance/rules.html. Note that both the Apache
# modules mod_deflate and mod_headers are required for this to work. Falls back nicely if
# not enabled.
##

<IfModule mod_deflate.c>
	SetOutputFilter DEFLATE

	#
	# BUT only do this for 'compressible content' where we cannot 'confuse' the browser.
	#
	# solution below is better? (at least not 'deprecated' like any use of AddOutputFilterByType...
	#
	SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png|tiff?)$ no-gzip dont-vary
	SetEnvIfNoCase Request_URI \.(?:exe|t?gz|zip|bz2|sit|rar|7z|lha|lzh|arj|Z)$ no-gzip dont-vary
	SetEnvIfNoCase Request_URI \.pdf$ no-gzip dont-vary
	SetEnvIfNoCase Request_URI \.(?:avi|mov|mkv|mpe?g|vob|rm|ogm|mp3|mp4|ogg|flac|ape|flv|wmv|wma|asf|swf)$ no-gzip dont-vary
	
</IfModule>


##
# Set expiry for caches using the apache Expire mod; misc. headers are set through the Headers module.
# The advantage is that we can specify flexible expire timestamps (no hardcoding!)
#
# See also
#   http://httpd.apache.org/docs/2.2/mod/mod_expires.html
# and
#   http://httpd.apache.org/docs/2.2/mod/mod_headers.html#header
##
<IfModule mod_expires.c>
	ExpiresActive On
	ExpiresDefault "access plus 1 year"
	ExpiresByType text/html "access plus 2 hours"
	ExpiresByType text/xml "access plus 2 hours"
	ExpiresByType application/xml "access plus 2 hours"
	
	<FilesMatch "\.(ico|pdf|flv|jpg|jpeg|png|gif|swf|mp3|mp4)$">
	Header set Cache-Control "public"
	# Header set Expires "access plus 1 year"
	Header unset Last-Modified
	</FilesMatch>
	<FilesMatch "\.(html|htm|xml|txt|xsl)$">
	Header set Cache-Control "max-age=7200, must-revalidate"
	</FilesMatch>
	<FilesMatch "\.(js|css)$">
	Header set Cache-Control "public"
	# these are all set up in combine.inc.php in a better way...
	#
	# Header set Expires "access plus 4 year"
	# Header unset Last-Modified
	</FilesMatch>
	
	# the ETag is set in combine.inc.php and meant to be passed through!
	# Header unset ETag
	# Header unset Pragma
</IfModule>


<IfModule mod_headers.c>
	
	# TODO: check this header manipulation stuff. The hardcoded dates make me go hmmmmm already...
	<FilesMatch "\.(ico|pdf|flv|jpg|jpeg|png|gif|swf|mp3|mp4|avi|mov|mkv|mpe?g|vob|rm|ogm|ogg|flac|ape|flv|wmv|wma|asf)$">
		Header set Cache-Control "public"
		Header set Expires "Fri, 1 Jun 2012 20:00:00 GMT"
		Header unset Last-Modified
	</FilesMatch>
	<FilesMatch "\.(html|htm|xml|txt|xsl)$">
		Header set Cache-Control "max-age=7200, must-revalidate"
	</FilesMatch>
	<FilesMatch "\.(js|css)$">
		Header set Cache-Control "public"
		Header set Expires "Sun, 1 Jun 2014 20:00:00 GMT"
		Header unset Last-Modified
	</FilesMatch>
	
	Header unset ETag
	Header unset Pragma
</IfModule>

FileETag None
	</Directory>

</VirtualHost>



# name-based virtual host:
# <VirtualHost *:80>
# IP-based virtual host:
<VirtualHost 127.0.0.3:80>
	ServerAdmin webmaster@example.com
	ServerName www.example.com
	ServerAlias *.example.com
	ServerName www.example.eu
	ServerAlias *.example.eu
	ServerAlias example.eu
	ServerName www.example.nl
	ServerAlias *.example.nl
	ServerAlias example.nl
	
	DocumentRoot /web/example.com

	ErrorLog /var/log/apache2/example.com.alias.error.log

	# Possible values include: debug, info, notice, warn, error, crit,
	# alert, emerg.
	LogLevel info

	CustomLog /var/log/apache2/example.com.alias.access.log combined



	KeepAlive Off
	# The KeepAlive Off closes the connection directly after the 301 redirect is sent.
	# This makes the apache instance available for new requests. Normally apache will
	# keep the line open for 15 to 25 seconds, depending on the overall KeepAlive
	# settings in your httpd.conf.

	Redirect permanent / http://example.com/
</VirtualHost>




#
# and copy&pasted the mod_deflate bit from the end of the main apache conf (remove leading '##    '):
#

##    #
##    # make sure this is the very last filter added to the filter chain, but BEFORE SSL:
##    #
##    <IfModule deflate_module>
##    #    FilterDeclare gzip CONTENT_SET
##    #    FilterProtocol gzip change=yes byteranges=no
##    #    FilterProvider gzip deflate resp=Content-Type $html
##    #    FilterChain gzip
##
##        ## wildcards are not supported in MIME types for AddOutputFilterByType, it seems?
##        #AddOutputFilterByType DEFLATE text/* application/vnd.ms-* application/msword application/postscript *xml* *html* *javascript* *svg* *vrml*
##
##        SetOutputFilter DEFLATE
##        # ripped from: http://www.cyberciti.biz/tips/speed-up-apache-20-web-access-or-downloads-with-mod_deflate.html
##        #AddOutputFilterByType DEFLATE text/plain
##        #AddOutputFilterByType DEFLATE text/xml
##        #AddOutputFilterByType DEFLATE application/xhtml+xml
##        #AddOutputFilterByType DEFLATE text/css
##        #AddOutputFilterByType DEFLATE application/xml
##        #AddOutputFilterByType DEFLATE image/svg+xml
##        #AddOutputFilterByType DEFLATE application/rss+xml
##        #AddOutputFilterByType DEFLATE application/atom_xml
##        #AddOutputFilterByType DEFLATE application/x-javascript
##        #AddOutputFilterByType DEFLATE application/x-httpd-php
##        #AddOutputFilterByType DEFLATE application/x-httpd-fastphp
##        #AddOutputFilterByType DEFLATE application/x-httpd-eruby
##        #AddOutputFilterByType DEFLATE text/html
##        #
##        # solution below is better? (at least not 'deprecated' like any use of AddOutputFilterByType...
##        #
##        SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png|tiff?)$ no-gzip dont-vary
##        SetEnvIfNoCase Request_URI \.(?:exe|t?gz|zip|bz2|sit|rar|7z|lha|lzh|arj|Z)$ no-gzip dont-vary
##        SetEnvIfNoCase Request_URI \.pdf$ no-gzip dont-vary
##        SetEnvIfNoCase Request_URI \.(?:avi|mov|mkv|mpe?g|vob|rm|ogm|mp3|ogg|flac|wmv|wma|asf)$ no-gzip dont-vary
##    </IfModule>


